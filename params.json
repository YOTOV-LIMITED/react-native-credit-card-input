{
  "name": "React-native-credit-card-input",
  "tagline": "Easy, cross-platform credit-card input for your React Native Project! Start accepting payment ðŸ’° in your app today!",
  "body": "\r\n# React Native Credit Card Input\r\nEasy (and good looking) credit-card input for your React Native Project ðŸ’³ ðŸ’³\r\n\r\n<p align=\"center\">\r\n<img src=\"https://github.com/sbycrosz/react-native-credit-card-input/blob/master/preview-ios.gif?raw=true\" width=200/>\r\n<img src=\"https://github.com/sbycrosz/react-native-credit-card-input/blob/master/preview-ios-lite.gif?raw=true\" width=200/>\r\n<img src=\"https://github.com/sbycrosz/react-native-credit-card-input/blob/master/preview-android.gif?raw=true\" width=200/>\r\n<img src=\"https://github.com/sbycrosz/react-native-credit-card-input/blob/master/preview-android-lite.gif?raw=true\" width=200/>\r\n</p>\r\n\r\nCode:\r\n\r\n```js\r\n<CreditCardInput onChange={this._onChange} />\r\n// or\r\n<LiteCreditCardInput onChange={this._onChange} />\r\n```\r\n\r\n\r\n# Features\r\n* Skeuomorphic credit-card ðŸ’³ (credits to: [react-native-credit-card](https://github.com/sonnylazuardi/react-native-credit-card))\r\n* Lite version for smaller screens (or if skeuomorphic is not really your thing)\r\n* Credit-card input validations & formatting while you're typing\r\n* Form is fully navigatable using keypad\r\n* Works on both Android and iOS\r\n\r\n\r\n# Usage\r\n\r\n```bash\r\nnpm i --save react-native-credit-card-input\r\n```\r\n\r\nthen add these lines in your react-native codebase\r\n\r\n```js\r\nimport { CreditCardInput, LiteCreditCardInput } from \"react-native-credit-card-input\";\r\n\r\n<CreditCardInput onChange={this._onChange} />\r\n// or\r\n<LiteCreditCardInput onChange={this._onChange} />\r\n\r\n// Note: You'll need to enable LayoutAnimation on android to see LiteCreditCardInput's animations\r\n// UIManager.setLayoutAnimationEnabledExperimental(true);\r\n\r\n```\r\n\r\nAnd then on your onChange handler:\r\n\r\n```js\r\n_onChange => form => console.log(form);\r\n\r\n// will print:\r\n{\r\n  valid: true, // will be true once all fields are \"valid\" (time to enable the submit button)\r\n  focused: \"number\", // will be one of [null, \"number\", \"expiry\", and \"cvc\"]\r\n  values: { // will be in the sanitized and formatted form\r\n  \tnumber: \"4242 4242\",\r\n  \texpiry: \"06/19\",\r\n  \tcvc: \"300\",\r\n  \ttype: \"visa\", // will be one of [null, \"visa\", \"master-card\", \"american-express\", \"diners-club\", \"discover\", \"jcb\", \"unionpay\", \"maestro\"]\r\n  },\r\n  status: {  // will be one of [\"incomplete\", \"invalid\", and \"valid\"]\r\n\tnumber: \"incomplete\",\r\n\texpiry: \"incomplete\"\r\n\tcvc: \"incomplete\"\r\n  },\r\n};\r\n```\r\n\r\n# Props\r\n\r\n## LiteCreditCardInput\r\n| Property | Type | Description |\r\n| --- | --- | --- | --- |\r\n|autoFocus | PropTypes.bool | Automatically focus Card Number field on render|\r\n|onChange | PropTypes.func | Receives a `formData` object every time the form changes |\r\n|placeholders | PropTypes.object | Defaults to <br/>`{ number: \"1234 5678 1234 5678\", expiry: \"MM/YY\", cvc: \"CVC\" }` |\r\n|inputStyle | Text.propTypes.style | Style for credit-card form's textInput |\r\n|validColor | PropTypes.string | Color that will be applied for valid text input. Defaults to: \"{inputStyle.color}\" |\r\n|invalidColor | PropTypes.string | Color that will be applied for invalid text input. Defaults to: \"red\" |\r\n|placeholderColor | PropTypes.string | Color that will be applied for text input placeholder. Defaults to: \"gray\" |\r\n\r\n## CreditCardInput\r\n| Property | Type | Description |\r\n| --- | --- | --- | --- |\r\n|autoFocus | PropTypes.bool | Automatically focus Card Number field on render|\r\n|onChange | PropTypes.func | Receives a `formData` object every time the form changes |\r\n|labels | PropTypes.object | Defaults to <br/>`{ number: \"CARD NUMBER\", expiry: \"EXPIRY\", cvc: \"CVC/CCV\" }` |\r\n|placeholders | PropTypes.object | Defaults to <br/>`{ number: \"1234 5678 1234 5678\", expiry: \"MM/YY\", cvc: \"CVC\" }` |\r\n|cardViewSize | PropTypes.object | Size of the credit-card view.<br/>Defaults to `{ width: 300, height: 180 }` (managed by [react-native-credit-card](https://github.com/sonnylazuardi/react-native-credit-card))  |\r\n|imageFront | PropTypes.number | Image for the credit-card view `e.g. require(\"./card.png\")` |\r\n|imageBack | PropTypes.number | Image for the credit-card view `e.g. require(\"./card.png\")` |\r\n|labelStyle | Text.propTypes.style | Style for credit-card form's labels |\r\n|inputStyle | Text.propTypes.style | Style for credit-card form's textInput |\r\n|inputContainerStyle | View.propTypes.style | Style for textInput's container<br/> Defaults to: `{ borderBottomWidth: 1, borderBottomColor: \"black\" }` |\r\n|validColor | PropTypes.string | Color that will be applied for valid text input. Defaults to: \"{inputStyle.color}\" |\r\n|invalidColor | PropTypes.string | Color that will be applied for invalid text input. Defaults to: \"red\" |\r\n|placeholderColor | PropTypes.string | Color that will be applied for text input placeholder. Defaults to: \"gray\" |\r\n\r\n\r\n# Example\r\n\r\nIn the `example` directory, run:\r\n\r\n```bash\r\nnpm install\r\n\r\nreact-native run-ios\r\n# or\r\nreact-native run-android\r\n```\r\n\r\n# Missing Something? Something is not working?\r\n* Open a GitHub issue, or\r\n* Send a pull request :D\r\n\r\n\r\n# Future Improvement\r\n* Add eslint\r\n* Add unit tests\r\n* Accept initialValues\r\n* Accept name / postalCode fields\r\n\r\n# Production App using react-native-credit-card-input\r\n* Grain.com.sg ([iOS](https://itunes.apple.com/us/app/grain-never-worry-about-food/id1088932420)) â€“ Gourmet food delivery in Singapore\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}